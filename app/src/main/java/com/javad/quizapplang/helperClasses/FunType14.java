package com.javad.quizapplang.helperClasses;import android.content.Context;import android.util.Log;import android.view.View;import android.view.ViewGroup;import android.widget.FrameLayout;import android.widget.TextView;import com.nex3z.flowlayout.FlowLayout;import java.util.ArrayList;import java.util.List;public class FunType14 {    List<TextView> listJaKhaliha;    List<TextView> listGozineha;    //    List<String> countCharJakhali;    private int positionEnable = -1;    List<List<String>> listsOfListGozineha;    //    List<String> listsOfListJavabha;    List<Integer> listPositionJakhali;    fun14 fun14;    int positionGozine = 0;    int ppoo = 0;    int positionJavabbb = 0;    boolean addToJakhali = true;    public void main(Context context, List<List<String>> listsOfListGozineha, List<String> javabha, List<String> listSoratSoal, FlowLayout soratSoal, FlowLayout flowGozineha, fun14 fun14) {        this.fun14 = fun14;//        this.listsOfListJavabha=lists;        this.listsOfListGozineha = listsOfListGozineha;        setSoratSoal(context, listSoratSoal, soratSoal);        setGozineha(context, listsOfListGozineha, flowGozineha, javabha);//        setGozineha(context, listsOfListGozineha, flowGozineha, soratSoal,javabha);    }    private void setSoratSoal(final Context context, List<String> soratSoal, FlowLayout upper) {        listJaKhaliha = new ArrayList<>();        for (int i = 0; i < soratSoal.size(); i++) {//            FlowLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);            TextView textView = new TextView(context);            boolean isJakhali = false;//            textView.setLayoutParams(layoutParams);            if (soratSoal.get(i).contains("--")) {                FlowLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);                textView.setLayoutParams(layoutParams);                textView.setTag("1");                isJakhali = true;                textView.setText(soratSoal.get(i));            } else if (soratSoal.get(i).equals("/")) {                FlowLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);                textView.setLayoutParams(layoutParams);                textView.setText("");                isJakhali = false;                textView.setTag("0");            } else {                isJakhali = false;                FlowLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);                textView.setLayoutParams(layoutParams);                textView.setTag("0");                textView.setText(soratSoal.get(i));            }            upper.addView(textView);            listJaKhaliha.add(textView);            fun14.CustomTextViewSoratSoal(listJaKhaliha, i, isJakhali);        }        listPositionJakhali = new ArrayList<>();//        listKolTxtViewMokaleme.add(3);        for (int i = 0; i < soratSoal.size(); i++) {            if (soratSoal.get(i).contains("--")) {                listPositionJakhali.add(i);            }        }        for (int i = 0; i < soratSoal.size(); i++) {            if (soratSoal.get(i).contains("--")) {                positionEnable = i;                break;            }        }        for (int i = 0; i < listJaKhaliha.size(); i++) {            final int finalI = i;            listJaKhaliha.get(finalI).setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    if (listJaKhaliha.get(finalI).getTag().equals("1"))                        fun14.When_Jakhali_Click_Kard(listJaKhaliha.get(finalI));                }            });        }    }    private void setGozineha(final Context context, final List<List<String>> listGznhyBottom,                             final FlowLayout flowLayoutgozineha, final List<String> javabha) {        this.listGozineha = new ArrayList<>();//        countCharJakhali = new ArrayList<>();        for (int i = 0; i < listGznhyBottom.get(positionGozine).size(); i++) {            TextView textView = new TextView(context);            textView.setText(listGznhyBottom.get(positionGozine).get(i));            flowLayoutgozineha.addView(textView);            this.listGozineha.add(textView);            fun14.CustomTextViewGozineha(this.listGozineha, i);        }        for (int i = 0; i < this.listGozineha.size(); i++) {            final int iiii = i;            this.listGozineha.get(i).setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {//                    if (addToJakhali) {                    String i = listJaKhaliha.get(positionEnable).getText().toString().split("\n")[0];                    Log.e("Pos", listJaKhaliha.get(positionEnable).getText().toString().split("\n")[0]);                    Log.e("Lenth", i.length() + "   " + listGznhyBottom.get(positionGozine).size() + "");//                   ==listGznhyBottom.get(positionGozine).size())                    if (listGznhyBottom.get(positionGozine).size() > i.length()) {                        String s = listJaKhaliha.get(positionEnable).getText().toString().split("\n")[0];                        String w = listJaKhaliha.get(positionEnable).getText().toString().split("\n")[1];                        if (listJaKhaliha.get(positionEnable).getText().toString().contains("--")) {                            listJaKhaliha.get(positionEnable).setText("");                            listJaKhaliha.get(positionEnable).setText(listGozineha.get(iiii).getText().toString() + "\n" + w);                        } else {                            listJaKhaliha.get(positionEnable).setText(s + listGozineha.get(iiii).getText().toString() + "\n" + w);                            if (i.length() + 1 == listGznhyBottom.get(positionGozine).size())                                setBazkhord(javabha, listGznhyBottom, context, flowLayoutgozineha, javabha);                        }                    }//                    } else if (i.length() + 1 == listGznhyBottom.get(positionGozine).size())//                        setBazkhord(javabha);//                    }                }            });        }    }    public void setBazkhord(List<String> javabha, List<List<String>> listGznhyBottom, Context context, FlowLayout flowLayout, List<String> jjjj) {        if (gtStrJkhli(listJaKhaliha.get(positionEnable)).equals(javabha.get(positionGozine))) {//            Log.e("SESESE", listGznhyBottom.size() + "  :  " + positionGozine);//            listGznhyBottom.size();            if (listGznhyBottom.size() > positionGozine+1) {                flowLayout.removeAllViews();                positionGozine++;//            if ()                setGozineha(context, listGznhyBottom, flowLayout, jjjj);            }            addToJakhali = false;            fun14.When_Javab_True(listJaKhaliha.get(positionEnable));//            Log.e("PossssJaKhali",listKolTxtViewMokaleme.size()+"");            if (listPositionJakhali.size() > ppoo + 1) {                ppoo++;                positionEnable = listPositionJakhali.get(ppoo);            } else {                fun14.WhenDone();            }        } else {            addToJakhali = false;            fun14.When_JavabFalse(listJaKhaliha.get(positionEnable));        }    }    public interface fun14 {        void CustomTextViewSoratSoal(List<TextView> textViews, int position, boolean isJakhali);        void When_Jakhali_Click_Kard(TextView textView);        void CustomTextViewGozineha(List<TextView> listGozineha, int position);        void When_Gozineha_Click(TextView textViewGozine, TextView textviewJakhali);        void When_Javab_True(TextView textView);        void When_JavabFalse(TextView textView);        void WhenDone();        void CustomTextViewGozineha2(List<TextView> listGozineha, int i);    }    private String gtStrJkhli(TextView textView) {        return textView.getText().toString().split("\n")[0];    }    private String getStringFromListGozineha(List<List<String>> lists, int positionGozine) {        StringBuilder s = new StringBuilder();        for (int i = 0; i < lists.get(positionGozine).size(); i++) {            s.append(lists.get(positionGozine).get(i));        }        return s.toString();    }    public static int sizeOfListOfJakhali(String jakhali, String kalame) {        String[] uu = jakhali.split("");        int aa = 0;        for (String anUu : uu) {            if (anUu.equals(kalame)) {                aa++;            }        }        return aa;    }    public int szOfGznha(List<String> stringList, String s) {        int size = 0;        for (int i = 0; i < stringList.size(); i++) {            if (stringList.get(i).equals(s)) {                size++;            }        }        return size;    }    //    @Override    public String getStringFromFlow(FlowLayout flowLayout) {        List<String> strings = new ArrayList<>();        for (int i = 0; i < flowLayout.getChildCount(); i++) {            TextView textView = (TextView) flowLayout.getChildAt(i);            strings.add(textView.getText().toString());        }//        strings.toString();        return strings.toString();    }}